name: "Release"
on:
  push:
    tags:
      - 'release/[0-9]+.[0-9]+.[0-9]+'

jobs:
  macosx86Release:
    name: Build MacOS Binary
    # macos-13 is x86
    runs-on: macos-13
    steps:
      - uses: actions/checkout@v4
      - uses: DeterminateSystems/nix-installer-action@main
      - uses: DeterminateSystems/magic-nix-cache-action@main
      - name: build hevm
        run: |
          nix build .#redistributable --out-link hevmMacos
          cp ./hevmMacos/bin/hevm ./hevm-x86_64-macos
      - uses: actions/upload-artifact@v4
        with:
          name: hevm-x86_64-macos
          path: ./hevm-x86_64-macos
  macosARMRelease:
    name: Build MacOS Binary
    needs: macosx86Release
    # macos-14 is arm, see https://github.com/orgs/community/discussions/102846
    #   "Workflows executed on this image will run exclusively on the 3 vCPU M1 runner"
    runs-on: macos-14
    steps:
      - uses: actions/checkout@v4
      - uses: DeterminateSystems/nix-installer-action@main
      - uses: DeterminateSystems/magic-nix-cache-action@main
      - name: build hevm
        run: |
          nix build .#redistributable --out-link hevmMacos
          cp ./hevmMacos/bin/hevm ./hevm-arm64-macos
      - uses: actions/upload-artifact@v4
        with:
          name: hevm-arm64-macos
          path: ./hevm-arm64-macos
  linuxRelease:
    name: Create Release
    needs: macosARMRelease
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: DeterminateSystems/nix-installer-action@main
      - uses: DeterminateSystems/magic-nix-cache-action@main
      - name: build hevm
        run: |
          nix build .#redistributable --out-link hevmLinux
          cp ./hevmLinux/bin/hevm ./hevm-x86_64-linux
      - name: download macos binary
        uses: actions/download-artifact@v4
        with:
          name: hevm-x86_64-macos
      - name: create github release & upload binaries
        uses: softprops/action-gh-release@v2.0.4
        with:
          files: |
            ./hevm-x86_64-linux
            ./hevm-x86_64-macos
      - name: prepare hackage artifacts
        run: |
          nix-shell --command "cabal sdist --builddir=${{ runner.temp }}/packages"
          nix-shell --command "cabal haddock lib:hevm --builddir=${{ runner.temp }}/docs --haddock-for-hackage --haddock-option=--hyperlinked-source"
      - name: publish to hackage
        uses: haskell-actions/hackage-publish@v1
        with:
          hackageToken: ${{ secrets.HACKAGE_AUTH_TOKEN }}
          packagesPath: ${{ runner.temp }}/packages/sdist
          docsPath: ${{ runner.temp }}/docs
          publish: true

